name: Deploy API after CI

on:
  workflow_run:
    workflows: ["CI/CD Flutter & Node.js"]
    types:
      - completed

jobs:
  deploy-api:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Setup SSH key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa_projet_individuel
          chmod 600 ~/.ssh/id_rsa_projet_individuel

      - name: Terraform Init (pour lire l’output)
        run: terraform init
        working-directory: ./ # adapte si tes fichiers sont ailleurs

      - name: Terraform Output (récupérer l’IP)
        id: tf_output
        run: |
          API_IP=$(terraform output -raw vm_external_ip)
          echo "API_IP=$API_IP" >> $GITHUB_ENV
        working-directory: ./

      - name: Create Ansible inventory with Terraform IP
        run: |
          echo "[api_servers]" > inventory.ini
          echo "${API_IP} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa_projet_individuel" >> inventory.ini

      - name: Test SSH connectivity
        run: ansible -i ./inventory.ini api_servers -m ping

      - name: Run Ansible playbook
        run: ansible-playbook -i ./inventory.ini ./ansible/deploy.yml